def slackChannel = 'daikon'
def gitCredentials = usernamePassword(
    credentialsId: 'github-credentials',
    passwordVariable: 'GIT_PASSWORD',
    usernameVariable: 'GIT_LOGIN')
def jiraCredentials = usernamePassword(
    credentialsId: 'jira-credentials',
    passwordVariable: 'JIRA_PASSWORD',
    usernameVariable: 'JIRA_LOGIN')
def currentBranch = env.CHANGE_BRANCH == null ? env.BRANCH_NAME : env.CHANGE_BRANCH

pipeline {

  parameters {
    booleanParam(
      name: "release",
      description: "Build a release from current commit",
      defaultValue: false)
    string(
      name: "release_version",
      description: "Release version",
      defaultValue: "0.0.0")
    string(
      name: "next_version",
      description: "Next version",
      defaultValue: "0.0.0-SNAPSHOT")
  }

  agent {
    kubernetes {
      label 'all_daikon'
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: maven
      image: jenkinsxio/builder-maven:0.1.211
      command:
      - cat
      tty: true
      volumeMounts:
      - name: docker
        mountPath: /var/run/docker.sock
      - name: m2
        mountPath: /root/daikon/.m2/repository
  volumes:
  - name: docker
    hostPath:
      path: /var/run/docker.sock
  - name: m2
    hostPath:
      path: /tmp/jenkins/daikon/m2
"""
    }
  }

  /*
  triggers {
    cron('H 15 3 * * 6')
  }
  */

  environment {
    MAVEN_OPTS = '-Dmaven.artifact.threads=128 -Dorg.slf4j.simpleLogger.showThreadName=true -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=HH:mm:ss'
  }

  options {
    buildDiscarder(logRotator(artifactNumToKeepStr: '5', numToKeepStr: env.BRANCH_NAME == 'master' ? '10' : '2'))
    timeout(time: 60, unit: 'MINUTES')
    skipStagesAfterUnstable()
  }

  stages {
    stage('Check git connectivity') {
      when {
        expression { params.release }
      }
      steps {
        container('maven') {
          withCredentials([gitCredentials]) {
            sh """
                ./jenkins/configure_git_credentials.sh '${GIT_LOGIN}' '${GIT_PASSWORD}'
                git tag ci-kuke-test && git push --tags
                git push --delete origin ci-kuke-test && git tag --delete ci-kuke-test
            """
          }
        }
      }
    }

    stage('Scan daikon release') {
      when {
        branch 'master'
      }
      environment {
        SRCCLR_API_TOKEN = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NzkwNjgsImV4cCI6MTU2MzQ2MzMxOSwiYXV0aG9yaXRpZXMiOiJBR0VOVCIsImp0aSI6IjQyNDhlMTdkLTUyZjktNDUzYi04YzMyLTA5MmY4MjllODBiMiIsImNsaWVudF9pZCI6IiIsInNjb3BlIjpbXX0.D6mfugo3B9xSoYgxKvEh1hiOD4Ves0d8Igj8kd3WTcx5rPXEYyQLZ5yUjrBgGxqHPQE7KHcTg8X5RvRtjfHIwwFmudoZR6pyKCzvuW_ADKhxz5Sr7G60suq-fLU8QLSnpCx2Rkh4ICSbPHAoWCE71hAp81A-nHBKKuYr2S6nF28'
        SRCCLR_EXTRA_ARGS = '--workspace knnHMln'
      }
      steps {
        container('maven') {
          configFileProvider([configFile(fileId: 'maven-settings-nexus-zl', variable: 'MAVEN_SETTINGS')]) {
            sh 'VERBOSE=true curl -sSL "https://download.sourceclear.com/ci.sh" | sh -- $SRCCLR_EXTRA_ARGS'
          }
        }
      }
    }
  }
  post {
  }
}
